import json
import os

msg = 'Checkpoint 3: snakefile command recieved - Prepping files for kSNP4 \n'
sys.stderr.write(msg)

current_directory = os.getcwd()

# Load the JSON data
with open('{}/config.json'.format(current_directory)) as f:
    data = json.load(f)
clean_fasta_dir = data["clean_data_dir"]
work_data_dir = data["work_data_dir"]
rule_all_list = [
                "{}/clean_fastas_complete.txt".format(work_data_dir),
                "{}/ksnp4_input_file.txt".format(clean_fasta_dir),
                "{}/Kchooser4_ksnp4_input_file.report".format(clean_fasta_dir)
                ]

rule all:
    input:
        rule_all_list


rule remove_special_characters_from_fasta_names:
    input:
        config = '{}/config.json'.format(current_directory)
    output:
        touchpoint = "{}/clean_fastas_complete.txt".format(work_data_dir)
    shell:
            """
            whole_genome_snp_utils clean-fasta-filenames \
                {input.config}

            touch {output.touchpoint}
            """

rule write_kSNP4_input_file:
    input:
        touchpoint = "{}/clean_fastas_complete.txt".format(work_data_dir)
    params:
        clean_fasta_dir_ = clean_fasta_dir
    output:
        ksnp_in_file = "{}/ksnp4_input_file.txt".format(clean_fasta_dir) # writing to fasta dir because Kchooser4 is picky 
    shell:
            """
            MakeKSNP4infile -indir {params.clean_fasta_dir_} -outfile {output.ksnp_in_file}
            """

rule run_kchooser:
    input:
        ksnp4_in_file = "{}/ksnp4_input_file.txt".format(clean_fasta_dir)
    params:
        clean_fasta_dir_ = clean_fasta_dir,
        current_directory_ = directory(current_directory),
        ksnp4_in_file = "ksnp4_input_file.txt" # using this relative path because kSNP4 is picky
    output:
        output_from_kchooser = "{}/Kchooser4_ksnp4_input_file.report".format(clean_fasta_dir),
        optimum_k_txt = "{}/optimum_k.txt".format(work_data_dir)
    shell:
        """
        cd {params.clean_fasta_dir_}

        Kchooser4 -in {params.ksnp4_in_file}

        cd {params.current_directory_}

        whole_genome_snp_utils parse-kchooser-report {output.output_from_kchooser} > {output.optimum_k_txt}
        """